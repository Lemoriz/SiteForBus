// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WorkJunior.Mod;

namespace WorkJunior.Migrations
{
    [DbContext(typeof(DBookingTickets))]
    partial class DBookingTicketsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("WorkJunior.Mod.BusDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CopyOfBusId");

                    b.Property<string>("FirstName");

                    b.Property<string>("SecondName");

                    b.HasKey("Id");

                    b.HasIndex("CopyOfBusId");

                    b.ToTable("BusDriver");
                });

            modelBuilder.Entity("WorkJunior.Mod.CopyOfBus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LicensePlate");

                    b.Property<int>("TypeOfBusId");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfBusId");

                    b.ToTable("CopyOfBus");
                });

            modelBuilder.Entity("WorkJunior.Mod.Itinerary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BeginningWay");

                    b.Property<string>("EndWay");

                    b.HasKey("Id");

                    b.ToTable("Itinerary");
                });

            modelBuilder.Entity("WorkJunior.Mod.TicketData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TripId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("TicketData");
                });

            modelBuilder.Entity("WorkJunior.Mod.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CopyOfBusId");

                    b.Property<DateTime>("DateTrip");

                    b.Property<int>("ItineraryId");

                    b.HasKey("Id");

                    b.HasIndex("CopyOfBusId");

                    b.HasIndex("ItineraryId");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("WorkJunior.Mod.TypeOfBus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Model");

                    b.Property<int>("Seats");

                    b.HasKey("Id");

                    b.ToTable("TypeOfBus");
                });

            modelBuilder.Entity("WorkJunior.Mod.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Access")
                        .IsRequired();

                    b.Property<string>("FirstName");

                    b.Property<string>("Mail")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("SecondName");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WorkJunior.Mod.BusDriver", b =>
                {
                    b.HasOne("WorkJunior.Mod.CopyOfBus", "CopyOfBus")
                        .WithMany()
                        .HasForeignKey("CopyOfBusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkJunior.Mod.CopyOfBus", b =>
                {
                    b.HasOne("WorkJunior.Mod.TypeOfBus", "TypeOfBus")
                        .WithMany()
                        .HasForeignKey("TypeOfBusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkJunior.Mod.TicketData", b =>
                {
                    b.HasOne("WorkJunior.Mod.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorkJunior.Mod.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkJunior.Mod.Trip", b =>
                {
                    b.HasOne("WorkJunior.Mod.CopyOfBus", "CopyOfBus")
                        .WithMany()
                        .HasForeignKey("CopyOfBusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorkJunior.Mod.Itinerary", "Itinerary")
                        .WithMany()
                        .HasForeignKey("ItineraryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
